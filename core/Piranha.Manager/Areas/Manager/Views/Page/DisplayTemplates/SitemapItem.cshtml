@using Piranha.Areas.Manager.Models
@using Piranha.Manager
@using Piranha.Models
@model SiteItemModel
@{
    SitemapItem item = Model.Item;
    string pageId = Model.PageId;
    int expanded = Model.ExpandedLevels;
}

<li class="sitemap-item dd-item @(!item.Published.HasValue ? "unpublished" : "") @(Model.CurrentLevel < Model.ExpandedLevels || (!string.IsNullOrEmpty(pageId) && item.HasChild(new Guid(pageId))) ? "expanded" : "")" data-id="@item.Id">
    <div class="dd-handle">
        <span class="glyphicon glyphicon-option-vertical"></span>
    </div>
    <div class="dd-toggle @(item.Items.Count == 0 ? "empty" : "")">
        @if (item.Items.Count > 0) {
            <span class="glyphicon glyphicon-plus-sign"></span>
            <span class="glyphicon glyphicon-minus-sign"></span>
        }
    </div>
    @if (!Model.ReadOnly) {
        <div class="actions three pull-right">
            @if ((await Authorization.AuthorizeAsync(User, Permission.PagesAdd)).Succeeded) {
                <a class="add-after first" href="@Url.Action("AddAt", new { type = "pageType", parentId = item.ParentId, sortOrder = item.SortOrder + 1 })" data-toggle="tooltip" data-original-title="Add after" data-placement="top">
                    <span class="glyphicon glyphicon-chevron-down"></span>
                </a>
                <a class="add-below" href="@Url.Action("AddAt", new { type = "pageType", parentId = item.Id, sortOrder = 0 })" data-toggle="tooltip" data-original-title="Add below" data-placement="top" data-parentid="@item.Id" data-sortorder="0">
                    <span class="glyphicon glyphicon-chevron-right"></span>
                </a>
            }
            @if ((await Authorization.AuthorizeAsync(User, Permission.PagesDelete)).Succeeded) {
                <a class="remove last confirm-delete" href="@Url.Action("Delete", new { id = item.Id })" @(item.Items.Count > 0 ? "style=visibility:hidden" : "") data-toggle="tooltip" data-original-title="Delete" data-placement="top" data-message="Are you sure you want to delete the page?">
                    <span class="glyphicon glyphicon-trash text-danger"></span>
                </a>
            }
        </div>
    }
    <div class="date pull-right">
        @(item.Published.HasValue ? item.Published.Value.ToString("yyyy-MM-dd") : "")
    </div>
    <div class="info pull-right">
        @item.PageTypeName
    </div>
    <div class="content">
        @if ((await Authorization.AuthorizeAsync(User, Permission.PagesEdit)).Succeeded) {
            <a href="@Url.Action("Edit", "Page", new { id = item.Id })" data-id="@item.Id" data-title="@(item.NavigationTitle != null ? item.NavigationTitle : item.Title)" data-url="@item.Permalink">@(item.NavigationTitle != null ? item.NavigationTitle : item.Title)</a>
        } else {
            <span class="title">@(item.NavigationTitle != null ? item.NavigationTitle : item.Title)</span>
        }
        @if (!item.Published.HasValue) {
            <span class="label label-info">Unpublished</span>
        }
    </div>
    @if (item.Items.Count > 0) {
        <ol class="dd-list">
            @foreach (var child in item.Items) {
                @Html.Partial("DisplayTemplates/SitemapItem", new SiteItemModel
                {
                    Item = child,
                    PageId = Model.PageId,
                    ExpandedLevels = Model.ExpandedLevels,
                    CurrentLevel = Model.CurrentLevel + 1
                })
            }
        </ol>
    }
</li>