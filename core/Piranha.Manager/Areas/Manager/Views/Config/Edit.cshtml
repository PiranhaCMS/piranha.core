@model Piranha.Areas.Manager.Models.ConfigEditModel
@{
    ViewBag.Title = "Config";
    ViewBag.Controller = "Config";
}

@using (var form = Html.BeginForm("Save", "Config", FormMethod.Post, new { id = "main-form", @class = "form", role = "form" })) {
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-sm-12 buttons">
            <button type="submit" class="btn btn-labeled btn-success">
                <span class="btn-label">
                    <i class="glyphicon glyphicon-ok"></i>
                </span>
                Save
            </button>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(ViewBag.Message)) {
        <div class="row">
            <div class="col-sm-12">
                <div class="@ViewBag.MessageCss">
                    @Html.Raw(ViewBag.Message)
                </div>
            </div>
        </div>
    }

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">General</h3>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.General.HierarchicalPageSlugs, "Hierarchical page slugs")
                        <blockquote>
                            If page slugs should take their parent slug into account when
                            being generated. This is prefered for larger sitemaps.
                        </blockquote>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(m => m.General.HierarchicalPageSlugs)
                                If page slugs should include the parent slug.
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.General.ExpandedSitemapLevels, "Expanded levels in the sitemap")
                        <blockquote>
                            The default number of levels that should be expanded in the page 
                            sitemap. This is useful for smaller sitemaps.
                        </blockquote>
                        @Html.TextBoxFor(m => m.General.ExpandedSitemapLevels, new { @class = "form-control small", type = "number" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.General.ArchivePageSize, "Archive page size")
                        <blockquote>
                            The default page size for Blog Page archive. Please note that this this
                            can be overridden for specific archives.
                        </blockquote>
                        @Html.TextBoxFor(m => m.General.ArchivePageSize, new { @class = "form-control small", type = "number" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Caching</h3>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Cache.PagesExpires, "Page cache expiration (minutes)")
                        <blockquote>
                            The time in minutes that web browsers can use pages before
                            asking the server for new updates.
                        </blockquote>
                        @Html.TextBoxFor(m => m.Cache.PagesExpires, new { @class = "form-control small", type = "number" })
                    </div>                
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Cache.PostsExpires, "Post cache expiration (minutes)")
                        <blockquote>
                            The time in minutes that web browsers can use posts before
                            asking the server for new updates.
                        </blockquote>
                        @Html.TextBoxFor(m => m.Cache.PostsExpires, new { @class = "form-control small", type = "number" })
                    </div>                
                </div>
            </div> 
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Cache.MediaCDN, "Media CDN")
                        <blockquote>
                            The full URL (including any folder name) to the CDN used to serve 
                            uploaded media. Leave bland to use default storage URL.
                        </blockquote>
                        @Html.TextBoxFor(m => m.Cache.MediaCDN, new { @class = "form-control small" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}