@using Piranha
@using Piranha.Models
@model Piranha.Areas.Manager.Models.MediaListModel
@{
    Layout = null;
}

<div class="row">
    <div class="col-sm-12">
        <div class="well well-upload">
            <form action="@Url.Action("ModalAdd", "Media")" method="post" enctype="multipart/form-data">
                <input type="hidden" name="ParentId" value="@Model.CurrentFolderId">
                <div class="row">
                    <div class="col-xs-10">
                        <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                            <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                            <span class="input-group-addon btn btn-default btn-file"><span class="fileinput-new">Select file</span><span class="fileinput-exists">Change</span><input type="file" id="ModalUploads" name="Uploads" multiple></span>
                            <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <div class="btn-group" role="group" style="display:block">
                            <button class="btn btn-success btn-labeled btn-block" type="submit">
                                <span class="btn-label">
                                    <i class="glyphicon glyphicon-ok"></i>
                                </span>Upload
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <table class="table table-striped table-main">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th class="date">Size</th>
                    <th class="date">Modified</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.CurrentFolderId.HasValue) {
                    <tr>
                        <td>
                            <span class="glyphicon glyphicon-folder-open media-icon"></span>
                            <a href="#" data-type="folder" data-folderid="@Model.ParentFolderId" data-filter="@Model.Filter.ToString().ToLower()">...</a>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                }
                @foreach (var folder in Model.Folders) {
                    <tr>
                        <td>
                            <span class="glyphicon glyphicon-folder-open media-icon"></span>
                            <a href="#" data-type="folder" data-folderid="@folder.Id" data-filter="@Model.Filter.ToString().ToLower()">@folder.Name</a>
                        </td>
                        <td></td>
                        <td></td>
                        <td>@folder.Created.ToString("yyyy-MM-dd")</td>
                    </tr>
                }
                @foreach (var item in Model.Media) {
                    <tr>
                        <td>
                            @if (item.Type == MediaType.Image) {
                                <span class="glyphicon glyphicon-picture media-icon"></span>
                            } else if (item.Type == MediaType.Video) {
                                <span class="glyphicon glyphicon-film media-icon"></span>
                            } else if (item.Type == MediaType.Document) {
                                <span class="glyphicon glyphicon-book media-icon"></span>
                            } else {
                                <span class="glyphicon glyphicon-exclamation-sign media-icon"></span>                                
                            }
                            <a href="#" data-type="item" data-id="@item.Id" data-name="@item.Filename" data-url="@Url.Content(item.PublicUrl)" data-contenttype="@item.ContentType" data-filesize="@Utils.FormatByteSize(item.Size)" data-modified="@item.LastModified.ToString("yyyy-MM-dd")">@item.Filename</a>
                        </td>
                        <td>@item.ContentType</td>
                        <td>@Utils.FormatByteSize(item.Size)</td>
                        <td>@item.LastModified.ToString("yyyy-MM-dd")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
