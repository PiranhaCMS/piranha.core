<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Config" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="Hierarchical page slugs" xml:space="preserve">
    <value>Hierarchical page slugs</value>
  </data>
  <data name="If page slugs should include the parent slug." xml:space="preserve">
    <value>If page slugs should include the parent slug.</value>
  </data>
  <data name="Expanded levels in the sitemap" xml:space="preserve">
    <value>Expanded levels in the sitemap</value>
  </data>
  <data name="Archive page size" xml:space="preserve">
    <value>Archive page size</value>
  </data>
  <data name="Caching" xml:space="preserve">
    <value>Caching</value>
  </data>
  <data name="Page cache expiration (minutes)" xml:space="preserve">
    <value>Page cache expiration (minutes)</value>
  </data>
  <data name="Page revisions" xml:space="preserve">
    <value>Page revisions</value>
  </data>
  <data name="Post cache expiration (minutes)" xml:space="preserve">
    <value>Post cache expiration (minutes)</value>
  </data>
  <data name="Post revisions" xml:space="preserve">
    <value>Post revisions</value>
  </data>
  <data name="Media CDN" xml:space="preserve">
    <value>Media CDN</value>
  </data>
  <data name="If page slugs should take their parent slug into account when being generated. This is prefered for larger sitemaps." xml:space="preserve">
    <value>If page slugs should take their parent slug into account when being generated. This is prefered for larger sitemaps.</value>
  </data>
  <data name="The default number of levels that should be expanded in the page sitemap. This is useful for smaller sitemaps." xml:space="preserve">
    <value>The default number of levels that should be expanded in the page sitemap. This is useful for smaller sitemaps.</value>
  </data>
  <data name="The default page size for archive pages. Please note that this this can be overridden for specific archives." xml:space="preserve">
    <value>The default page size for archive pages. Please note that this this can be overridden for specific archives.</value>
  </data>
  <data name="The maximum number of page revisions that should be stored for each page. A value of 0 means no limitation." xml:space="preserve">
    <value>The maximum number of page revisions that should be stored for each page. A value of 0 means no limitation.</value>
  </data>
  <data name="The maximum number of post revisions that should be stored for each post. A value of 0 means no limitation." xml:space="preserve">
    <value>The maximum number of post revisions that should be stored for each post. A value of 0 means no limitation.</value>
  </data>
  <data name="The time in minutes that web browsers can use pages before asking the server for new updates." xml:space="preserve">
    <value>The time in minutes that web browsers can use pages before asking the server for new updates.</value>
  </data>
  <data name="The time in minutes that web browsers can use posts before asking the server for new updates." xml:space="preserve">
    <value>The time in minutes that web browsers can use posts before asking the server for new updates.</value>
  </data>
  <data name="The full URL (including any folder name) to the CDN used to serve uploaded media. Leave blank to use default storage URL." xml:space="preserve">
    <value>The full URL (including any folder name) to the CDN used to serve uploaded media. Leave blank to use default storage URL.</value>
  </data>
  <data name="Approve comments" xml:space="preserve">
    <value>Approve comments</value>
  </data>
  <data name="Close comments after" xml:space="preserve">
    <value>Close comments after</value>
  </data>
  <data name="Collapse block headers" xml:space="preserve">
    <value>Collapse block headers</value>
  </data>
  <data name="Collapse blocks" xml:space="preserve">
    <value>Collapse blocks</value>
  </data>
  <data name="Comments page size" xml:space="preserve">
    <value>Comments page size</value>
  </data>
  <data name="Enable page comments" xml:space="preserve">
    <value>Enable page comments</value>
  </data>
  <data name="Enable post comments" xml:space="preserve">
    <value>Enable post comments</value>
  </data>
  <data name="If block group headers should be collapsed by default when opening a page or post in the manager." xml:space="preserve">
    <value>If block group headers should be collapsed by default when opening a page or post in the manager.</value>
  </data>
  <data name="If blocks should be collapsed by default when opening a page or post in the manager." xml:space="preserve">
    <value>If blocks should be collapsed by default when opening a page or post in the manager.</value>
  </data>
  <data name="If comments should be approved by default. Please note that this can be overridden by third party moderation services." xml:space="preserve">
    <value>If comments should be approved by default. Please note that this can be overridden by third party moderation services.</value>
  </data>
  <data name="If comments should be enabled for pages by default. Please note that this this can be overridden for specific pages." xml:space="preserve">
    <value>If comments should be enabled for pages by default. Please note that this this can be overridden for specific pages.</value>
  </data>
  <data name="If comments should be enabled for posts by default. Please note that this this can be overridden for specific posts." xml:space="preserve">
    <value>If comments should be enabled for posts by default. Please note that this this can be overridden for specific posts.</value>
  </data>
  <data name="The default page size when loading comments. Please note that this this can be overridden for specific pages." xml:space="preserve">
    <value>The default page size when loading comments. Please note that this this can be overridden for specific pages.</value>
  </data>
  <data name="The number of days commenting should be open after publish date. A value of 0 means forever." xml:space="preserve">
    <value>The number of days commenting should be open after publish date. A value of 0 means forever.</value>
  </data>
</root>